

/**
 * info panels
 * key | panel
 *
 *  1  | game data
 *  2  | loc data
 *  3  | foe data
 *  4  | player data
 *  5  | toolbelt
 *  6  | inventory
 *  7  | keyboard shortcuts
 *  8  | script overrides
 *  9  | script imports
 *
 *
 * TODO
 * fill panels, adjust width,
 *   maybe implement headers as well
 * add camera control buttons
 *   with keybinds
 */




var customRoot
var arrayButton = []
var arrayPanel = []
var arrayText = []
var arrayContent = []

var panelHeight = 27
var panelWidth = 50


var styleButton = ui.AddStyle("
^══╗
^  ║
^══╝")

var stylePanel = ui.AddStyle("
^╔═╗
^║ ║
^╚═╝")




func mainInit()
// {
  ? loc.loop
  // {
    for i = 0..8
    // {
      arrayButton[i].Recycle()
      arrayPanel[i].Recycle()
      arrayText[i].Recycle()
      arrayContent[i].Recycle()
    // }

    arrayButton.Clear()
    arrayPanel.Clear()
    arrayText.Clear()
    arrayContent.Clear()
  // }


  ? loc.loop | loc.begin
  // {
    customRoot = ui.AddPanel()
    customRoot.anchor = "top_left"
    customRoot.dock= "top_left"
    customRoot.visible = false

    for i = 0..8
    // {
      var btn = ui.AddButton()
      buttonInit(btn, i)
      customRoot.Add(btn)
      arrayButton.Add(btn)
      btn.SetPressed(buttonToggle)


      var pnl = ui.AddPanel()
      panelInit(pnl, i)
      customRoot.Add(pnl)
      arrayPanel.Add(pnl)


      var txt = ui.AddText()
      textInit(txt, i)
      customRoot.Add(txt)
      arrayText.Add(txt)


      var cnt = ui.AddText()
      contentInit(cnt, i)
      arrayPanel[i].Add(cnt)
      arrayContent.Add(cnt)
    // }
  // }
// }




func buttonInit(button, id)
// {
  button.anchor = "top_left"
  button.dock = "top_left"

  button.x = 0
  button.y = (id * 3)

  button.w = 4
  button.h = 3

  button.text = "▶ "

  button.visible = true
  button.style = styleButton
// }




func panelInit(panel, id)
// {
  panel.anchor = "top_left"
  panel.dock = "top_left"

  panel.x = 4
  panel.y = 0

  panel.w = panelWidth
  panel.h = panelHeight

  panel.visible = false
  panel.style = stylePanel
// }




func textInit(text, id)
// {
  text.anchor = "top_left"
  text.dock = "top_left"

  text.x = 0
  text.y = (id * 3)

  var buttonBorder = "════"
  var buttonCornerTop = "╝"
  var buttonCornerBottom = "╗"

  ? id = 0
    buttonCornerTop = "═"
  :?id = 8
    buttonCornerBottom = "═"

  var n = "\n"
  var buttonContent = " ◀▶  "


  text.text
^ = buttonBorder + buttonCornerTop + n
^ + buttonContent + n
^ + buttonBorder + buttonCornerBottom + n


  text.visible = false
// }




func contentInit(content, id)
// {
  content.anchor = "top_left"
  content.dock = "top_left"
  content.x = 2
  content.y = 0
  content.w = panelWidth - 4
  content.h = panelHeight - 2
  content.visible = inherit
// }




func buttonToggle(button)
// {
  for i = 0..8
  // {
    ?button = arrayButton[i]
    // {
      ?!arrayPanel[i].visible  // if toggled off
      // {
        arrayPanel[i].visible = true
        arrayText[i].visible = true

        for j = 0..8
        // {
          ? button ! arrayButton[j]
          // untoggles other buttons
          // {
            arrayPanel[j].visible = false
            arrayText[j].visible = false
          // }
        // }

        panelContentInit(i)
      // }
      :?arrayPanel[i].visible  // if toggled on
      // {
        arrayPanel[i].visible = false
        arrayText[i].visible = false
        return
      // }
    // }
  // }

  return
// }




func panelContentInit(i)
// {
  var n = "\n"
  var header = ""
  var panelContent = ""


  ? i = 0
  // {
    header = "# GAME DATA "

    panelContent
  ^ = ""
  ^ + ""
  // }
  :?i = 1
  // {
    header = "# LOCATION DATA "

    panelContent
  ^ = "loc string: "
  ^ + loc
  // }
  :?i = 2
  // {
    header = "# FOE DATA "

    panelContent
  ^ = "foe string: "
  ^ + foe
  // }
  :?i = 3
  // {
    header = "# PLAYER DATA "

    panelContent
  ^ = "name: " + player.name + n
  ^ + "hp: " + hp + "/" + maxhp + n
  ^ + "armour: " + armor.f + "/" + maxarmor + n
  ^ + "position & direction: "
  ^ + "x" + pos.x + ", "
  ^ + "y" + pos.y + ", "
  ^ + "z" + pos.z + ", "
  ^ + "d" + player.direction + n
  ^ + "item.potion: " + item.potion + n
  ^ + "item.left: " + item.left + n
  ^ + "item.right: " + item.right + n
  ^ + "buffs.string: " + buffs.string + n
  ^ + "debuffs.string: " + debuffs.string + n
  // }
  :?i = 4
  // {
    header = "# TOOLBELT "

    panelContent
  ^ = "UNDER CONSTRUCTION"
  ^ + ""
  // }
  :?i = 5
  // {
    header = "# INVENTORY "

    panelContent
  ^ = ""
  ^ + "[color=#808080] ° [/color]"
  ^ + res.stone + n
  ^ + "[color=#9b3523]_/`[/color]"
  ^ + res.wood + n
  ^ + "[color=#404040] ≈ [/color]"
  ^ + res.tar + n
  ^ + "[color=#954709] :.[/color]"
  ^ + res.bronze + n
  ^ + "[color=#ffffff] @ [/color]"
  ^ + res.ki + n
  ^ + "[color=#e113df] ♦ [/color]"
  ^ + res.crystals + n
  // }
  :?i = 6
  // {
    header = "# KEYBOARD SHORTCUTS "

    panelContent
  ^ = "UNDER CONSTRUCTION"
  ^ + ""
  // }
  :?i = 7
  // {
    header = "# SCRIPT OVERRIDES "

    panelContent
  ^ = "UNDER CONSTRUCTION"
  ^ + ""
  // }
  :?i = 8
  // {
    header = "# SCRIPT IMPORTS "

    panelContent
  ^ = "UNDER CONSTRUCTION"
  ^ + ""
  // }
  :
  // {
    header = "# UNNAMED PANEL "

    panelContent
  ^ = "You aren't supposed to see this"
  // }


  arrayContent[i].text
^ = header + n + n + panelContent

  return
// }
