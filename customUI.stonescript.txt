

/**
 * info panels
 * key | panel
 *
 *  1  | game data
 *  2  | loc data
 *  3  | foe data
 *  4  | player data
 *  5  | toolbelt
 *  6  | inventory
 *  7  | keyboard shortcuts
 *  8  | script overrides
 *  9  | script imports
 *
 *
 * TODO
 * fill panels, adjust width,
 *   maybe implement headers as well
 * add camera control buttons
 *   with keybinds
 */

/*
```js
```
 */




var customRoot
var arrayButton = []
var arrayPanel = []
var arrayText = []
var arrayContent = []


var styleButton = ui.AddStyle("
^══╗
^  ║
^══╝")

var stylePanel = ui.AddStyle("
^╔═╗
^║ ║
^╚═╝")




func mainInit()
// {
  ? loc.loop
  // {
    for i = 0..8
    // {
      arrayButton[i].Recycle()
      arrayPanel[i].Recycle()
      arrayText[i].Recycle()
      arrayContent[i].Recycle()
    // }
  // }


  ? loc.loop | loc.begin
  // {
    customRoot = ui.AddPanel()
    customRoot.anchor = "top_left"
    customRoot.dock= "top_left"
    customRoot.visible = false

    for i = 0..8
    // {
      var btn = ui.AddButton()
      buttonInit(btn, i)
      customRoot.Add(btn)
      arrayButton.Add(btn)
      btn.SetPressed(buttonToggle)


      var pnl = ui.AddPanel()
      panelInit(pnl, i)
      customRoot.Add(pnl)
      arrayPanel.Add(pnl)


      var txt = ui.AddText()
      textInit(txt, i)
      customRoot.Add(txt)
      arrayText.Add(txt)


      var cnt = ui.AddText()
      arrayPanel[i].Add(cnt)
      arrayContent.Add(cnt)
    // }
  // }
// }




func buttonInit(button, id)
// {
  button.anchor = "top_left"
  button.dock = "top_left"

  button.x = 0
  button.y = (id * 3)

  button.w = 4
  button.h = 3

  button.text = "▶ "

  button.visible = true
  button.style = styleButton
// }




func panelInit(panel, id)
// {
  panel.anchor = "top_left"
  panel.dock = "top_left"

  panel.x = 4
  panel.y = 0

  panel.w = 50
  panel.h = 27

  panel.visible = false
  panel.style = stylePanel
// }




func textInit(text, id)
// {
  text.anchor = "top_left"
  text.dock = "top_left"

  text.x = 0
  text.y = (id * 3)

  var buttonBorder = "════"
  var buttonCornerTop = "╝"
  ?id = 0
    buttonCornerTop = "═"

  var buttonCornerBottom = "╗"
  ?id = 8
    buttonCornerBottom = "═"

  var n = "\n"
  var buttonContent = " ◀▶  "


  text.text
^ = buttonBorder + buttonCornerTop + n
^ + buttonContent + n
^ + buttonBorder + buttonCornerBottom + n


  text.visible = false
// }




func buttonToggle(button)
// {
  for i = 0..8
  // {
    ?button = arrayButton[i]
    // {
      ?!arrayPanel[i].visible  // if toggled off
      // {
        arrayPanel[i].visible = true
        arrayText[i].visible = true

        for j = 0..8
        // {
          ? button ! arrayButton[j]
          // untoggles other buttons
          // {
            arrayPanel[j].visible = false
            arrayText[j].visible = false
          // }
        // }

        panelSetContents(i)
      // }
      :?arrayPanel[i].visible  // if toggled on
      // {
        arrayPanel[i].visible = false
        arrayText[i].visible = false
        return
      // }
    // }
  // }

  return
// }



// game data panel
func panelSetContents(i)
// {
  ? i = 0
  // {
    var header = "GAME DATA"
    var n = "\n"
  // }
  :
  // {
    var header = "UNNAMED PANEL"
    var n = "\n"
  // }


  arrayContent[i].text
^ = header + n

  return
// }
